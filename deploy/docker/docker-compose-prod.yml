version: "3"

services:

  app:
    container_name: msorder
    image: andreriggs/ms-order:latest
    restart: always
    ports:
      - "80:8080"
    environment:
      TZ: "America/Sao_Paulo"
      SERVER_PORT: 8080
      ACTIVE_PROFILE: prod
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: msorder
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      RABBITMQ_HOST: broker
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
    volumes:
      - ../target:/opt/app
    links:
      - db
      - broker
    depends_on:
      - db
      - broker
    networks:
      - docker-network

  broker:
    container_name: 'rabbitmq'
    image: rabbitmq:3-management-alpine
    hostname: "rabbit"
    labels:
      NAME: "rabbitmq"
    restart: always
    environment:
      TZ: "America/Sao_Paulo"
      DEFAULT_VHOST: /
      DEFAULT_USER: 'guest'
      DEFAULT_PASS: 'guest'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - "./rabbitmq/data/:/var/lib/rabbitmq"
      - "./rabbitmq/rabbitmq-enabled-plugins:/etc/rabbitmq/enabled_plugins"
      - "./rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config"
      - "./rabbitmq/rabbitmq-defs.json:/etc/rabbitmq/rabbitmq-defs.json"
    networks:
      - docker-network

  db:
    container_name: postgres-db
    image: postgres:13
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      TZ: "America/Sao_Paulo"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "msorder"
    networks:
      - docker-network

networks:
  docker-network:
    driver: bridge
